I"\<h1 id="문제-설명">문제 설명</h1>

<p>네오는 평소 프로도가 비상금을 숨겨놓는 장소를 알려줄 비밀지도를 손에 넣었다. 그런데 이 비밀지도는 숫자로 암호화되어 있어 위치를 확인하기 위해서는 암호를 해독해야 한다. 다행히 지도 암호를 해독할 방법을 적어놓은 메모도 함께 발견했다.</p>

<ol>
  <li>지도는 한 변의 길이가 n인 정사각형 배열 형태로, 각 칸은 “공백”(“ “) 또는 “벽”(“#”) 두 종류로 이루어져 있다.</li>
  <li>전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 “지도 1”과 “지도 2”라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.</li>
  <li>“지도 1”과 “지도 2”는 각각 정수 배열로 암호화되어 있다.</li>
  <li>암호화된 배열은 지도의 각 가로줄에서 벽 부분을 1, 공백 부분을 0으로 부호화했을 때 얻어지는 이진수에 해당하는 값의 배열이다.</li>
</ol>

<p><img src="http://t1.kakaocdn.net/welcome2018/secret8.png" alt="" /></p>

<p>네오가 프로도의 비상금을 손에 넣을 수 있도록, 비밀지도의 암호를 해독하는 작업을 도와줄 프로그램을 작성하라.</p>

<h2 id="입력-형식">입력 형식</h2>
<p>입력으로 지도의 한 변 크기 n 과 2개의 정수 배열 arr1, arr2가 들어온다.</p>

<ul>
  <li>1 ≦ n ≦ 16</li>
  <li>arr1, arr2는 길이 n인 정수 배열로 주어진다.</li>
  <li>정수 배열의 각 원소 x를 이진수로 변환했을 때의 길이는 n 이하이다. 즉, 0 ≦ x ≦ 2n - 1을 만족한다.</li>
</ul>

<h2 id="출력-형식">출력 형식</h2>
<p>원래의 비밀지도를 해독하여 ‘#’, 공백으로 구성된 문자열 배열로 출력하라.</p>

<p>입출력 예제</p>

<table>
  <thead>
    <tr>
      <th>매개변수</th>
      <th>값</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>n</td>
      <td>5</td>
    </tr>
    <tr>
      <td>arr1</td>
      <td>[9, 20, 28, 18, 11]</td>
    </tr>
    <tr>
      <td>arr2</td>
      <td>[30, 1, 21, 17, 28]</td>
    </tr>
    <tr>
      <td>출력</td>
      <td>[”#####”,”# # #”, “### #”, “# ##”, “#####”]</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>매개변수</th>
      <th>값</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>n</td>
      <td>6</td>
    </tr>
    <tr>
      <td>arr1</td>
      <td>[46, 33, 33 ,22, 31, 50]</td>
    </tr>
    <tr>
      <td>arr2</td>
      <td>[27 ,56, 19, 14, 14, 10]</td>
    </tr>
    <tr>
      <td>출력</td>
      <td>[”######”, “### #”, “## ##”, “ #### “, “ #####”, “### # “]</td>
    </tr>
  </tbody>
</table>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">arr1</span><span class="p">,</span> <span class="n">arr2</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="n">sum_arr</span> <span class="o">=</span> <span class="nb">bin</span><span class="p">(</span><span class="n">arr1</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">|</span> <span class="n">arr2</span><span class="p">[</span><span class="n">i</span><span class="p">])[</span><span class="mi">2</span><span class="p">:]</span>
        <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">sum_arr</span><span class="p">)</span> <span class="o">!=</span> <span class="n">n</span><span class="p">:</span> <span class="n">sum_arr</span> <span class="o">=</span> <span class="s">"0"</span> <span class="o">+</span> <span class="n">sum_arr</span> 
        <span class="n">sum_arr</span> <span class="o">=</span> <span class="n">sum_arr</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"1"</span><span class="p">,</span> <span class="s">"#"</span><span class="p">).</span><span class="n">replace</span><span class="p">(</span><span class="s">"0"</span><span class="p">,</span> <span class="s">" "</span><span class="p">)</span>
        <span class="n">answer</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">sum_arr</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="n">answer</span>
</code></pre></div></div>
:ET